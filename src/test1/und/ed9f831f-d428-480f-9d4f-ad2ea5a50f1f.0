{4,
{50,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{31,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"загрузить",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{12,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"загрузитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0,0,1,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{12,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0,0},0,3,3,0},1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0,0,0,
{50,0},1},"
&НаКлиенте
Процедура загрузить(Команда)
	ПрочитатьExcel();
КонецПроцедуры  

&НаКлиенте
Асинх Процедура ПрочитатьExcel()
	
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Заголовок = ""Выберите файл"";
	ПараметрыДиалога.Фильтр = ""Файл накладной | *.csv;"";
	
	ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(,,,ПараметрыДиалога);
	Если ОписаниеФайла <> Неопределено Тогда
		ПрочитатьExcelВТаблицуЗначений(ОписаниеФайла.Адрес, ОписаниеФайла.СсылкаНаФайл.Расширение);
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(""Обработка файла завершена!"");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПрочитатьExcelВТаблицуЗначений(Знач АдресДанных,Знач РасширениеФайла)
	
	ПутьКфайлу = ПолучитьИмяВременногоФайла(РасширениеФайла);
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанных);
	Данные.Записать(ПутьКфайлу);
	
	Попытка
		ТаблицаЧтения = ПрочитатьCSVвТЗ(ПутьКфайлу, Истина);
		УдалитьФайлы(ПутьКфайлу);
	Исключение
		ТекстОшибки = НСтр(""ru = 'Ошибка чтения таблицы из файла excel!'"");
		ЗаписьЖурналаРегистрации(ТекстОшибки, УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипКолонкиОтИмени(ЗаголовокКолонки)

	Если ЗаголовокКолонки = ""Цена с НДС"" Или ЗаголовокКолонки = ""Количество"" 
		Или ЗаголовокКолонки = ""Сумма с НДС"" Или ЗаголовокКолонки = ""Сумма НДС"" Тогда
		
		Возврат ОбщегоНазначения.ОписаниеТипаЧисло(15,2);
	Иначе
		Возврат ОбщегоНазначения.ОписаниеТипаСтрока(150);
	КонецЕсли;

КонецФункции // ()

&НаСервереБезКонтекста
Функция ПрочитатьCSVвТЗ(ИмяФайла,ЗаголовкиИзПервойСтроки = Ложь, Разделитель="";"")
	
	Текст = Новый ЧтениеТекста(ИмяФайла);
	Результат = Новый ТаблицаЗначений;
	
	ТекСтрока = Текст.ПрочитатьСтроку();
	
	Если ТекСтрока <> Неопределено Тогда
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		ИндексКолонки = 0;
		Для Каждого ИмяКолонки Из МассивЗначений Цикл
			ИмяКолонки = ?(ЗаголовкиИзПервойСтроки, ИмяКолонки, ""Кол"" +ИндексКолонки);
			Результат.Колонки.Добавить(""Колонка"" + ИндексКолонки, ТипКолонкиОтИмени(ИмяКолонки), ИмяКолонки);
			ИндексКолонки = ИндексКолонки + 1;
		КонецЦикла;
		Если ЗаголовкиИзПервойСтроки Тогда
			ТекСтрока = Текст.ПрочитатьСтроку();
		КонецЕсли;
	КонецЕсли;
	
	Пока ТекСтрока <> Неопределено Цикл 
		НоваяСтрока = Результат.Добавить();
		
		МассивЗначений = СтрРазделить(ТекСтрока, Разделитель);
		КоличествоКолонок = Мин(Результат.Колонки.Количество(), МассивЗначений.Количество());
		Для ИндексКолонки = 0 По КоличествоКолонок - 1 Цикл
			НоваяСтрока[ИндексКолонки] = МассивЗначений[ИндексКолонки];
		КонецЦикла;
		
		ТекСтрока = Текст.ПрочитатьСтроку();
	КонецЦикла;
	
	Результат = ТзЗапрос(Результат);
	
	Текст.Закрыть();
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТзЗапрос(ТЗ)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	ТЗ.Колонка0 КАК Дата,
	|	ТЗ.Колонка1 КАК Номер,
	|	ТЗ.Колонка2 КАК Проведен,
	|	ТЗ.Колонка3 КАК ВходНомер,
	|	ТЗ.Колонка5 КАК ИннПоставщик,
	|	ТЗ.Колонка7 КАК Поставщик,
	|	ТЗ.Колонка9 КАК Сотрудник,
	|	ТЗ.Колонка11 КАК Склад,
	|	ТЗ.Колонка14 КАК Номенклатура,
	|	ТЗ.Колонка17 КАК Количество,
	|	ВЫРАЗИТЬ(ТЗ.Колонка18 КАК ЧИСЛО(15, 1)) КАК ЦенаСНдс,
	|	ВЫРАЗИТЬ(ТЗ.Колонка19 КАК ЧИСЛО(15, 1)) КАК СуммаСНДС,
	|	ВЫРАЗИТЬ(ТЗ.Колонка20 КАК ЧИСЛО(15, 1)) КАК СуммаНДС,
	|	ТЗ.Колонка21 КАК СтавкаНДС,
	|	ТЗ.Колонка30 КАК ЕдиницаИзмерения,
	|	ТЗ.Колонка41 КАК НомерТТН
	|ПОМЕСТИТЬ вт_Тз
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Тз.Дата КАК Дата,
	|	вт_Тз.Номер КАК Номер,
	|	вт_Тз.Проведен КАК Проведен,
	|	вт_Тз.ВходНомер КАК ВходНомер,
	|	вт_Тз.ИннПоставщик КАК ИннПоставщик,
	|	вт_Тз.Поставщик КАК Поставщик,
	|	вт_Тз.Сотрудник КАК Сотрудник,
	|	вт_Тз.Склад КАК Склад,
	|	вт_Тз.Номенклатура КАК Номенклатура,
	|	СУММА(вт_Тз.Количество) КАК Количество,
	|	СУММА(вт_Тз.ЦенаСНдс) КАК ЦенаСНдс,
	|	СУММА(вт_Тз.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(вт_Тз.СуммаНДС) КАК СуммаНДС,
	|	вт_Тз.СтавкаНДС КАК СтавкаНДС,
	|	вт_Тз.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	вт_Тз.НомерТТН КАК НомерТТН
	|ИЗ
	|	вт_Тз КАК вт_Тз
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Тз.Номенклатура,
	|	вт_Тз.ЕдиницаИзмерения,
	|	вт_Тз.СтавкаНДС,
	|	вт_Тз.Дата,
	|	вт_Тз.Номер,
	|	вт_Тз.Проведен,
	|	вт_Тз.ВходНомер,
	|	вт_Тз.ИннПоставщик,
	|	вт_Тз.Поставщик,
	|	вт_Тз.Сотрудник,
	|	вт_Тз.Склад,
	|	вт_Тз.НомерТТН
	|ИТОГИ ПО
	|	ВходНомер"";
	
	
	Запрос.УстановитьПараметр(""ТЗ"", ТЗ);
	
	ТаблицаНакладных = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаНакладных;
	
КонецФункции // ()

Процедура ТестГита()

	а = 1;

КонецПроцедуры

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",a097c4e1-ed56-4fbe-a8f9-a822aa51d93a}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,1,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"загрузить",
{1,1,
{"ru","Загрузить"}
},
{1,1,
{"ru","Загрузить"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"загрузить",3,0,0,
{0,0},1,0,1,0,0,2}
},
{0,0},
{0,0},0,0}